@startuml
title I2C Module - Typical Call Sequence

actor "Application Code" as App
participant "I2C Driver" as I2C

== Initialization ==
App -> I2C : manikin_i2c_init(i2c_inst, i2c_baud)
activate I2C
I2C --> App : MANIKIN_STATUS_OK / error
deactivate I2C

== Device Check ==
App -> I2C : manikin_i2c_check_device_address(i2c_inst, i2c_addr)
activate I2C
I2C --> App : 0 (not found) / 1 (found)
deactivate I2C

== Register Read ==
App -> I2C : manikin_i2c_read_reg(i2c_inst, i2c_addr, reg, *data)
activate I2C
I2C --> App : MANIKIN_STATUS_OK / error
deactivate I2C

== Register Write ==
App -> I2C : manikin_i2c_write_reg(i2c_inst, i2c_addr, reg, data)
activate I2C
I2C --> App : MANIKIN_STATUS_OK / error
deactivate I2C

== Multi-byte Read ==
App -> I2C : manikin_i2c_read_bytes(i2c_inst, i2c_addr, *data, len)
activate I2C
I2C --> App : bytes read

== Multi-byte Write ==
App -> I2C : manikin_i2c_write_bytes(i2c_inst, i2c_addr, *data, len)
activate I2C
I2C --> App : bytes written
deactivate I2C

== Deinitialization ==
App -> I2C : manikin_i2c_deinit(i2c_inst)
activate I2C
I2C --> App : MANIKIN_STATUS_OK
deactivate I2C

@enduml
